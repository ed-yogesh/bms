[{"/var/www/html/bms/bms-frontend/src/index.js":"1","/var/www/html/bms/bms-frontend/src/App.js":"2","/var/www/html/bms/bms-frontend/src/reportWebVitals.js":"3","/var/www/html/bms/bms-frontend/src/Components/DataTables.js":"4","/var/www/html/bms/bms-frontend/src/Components/AddModel.js":"5"},{"size":336,"mtime":1609319007324,"results":"6","hashOfConfig":"7"},{"size":232,"mtime":1609498086464,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1609314573044,"results":"9","hashOfConfig":"7"},{"size":9076,"mtime":1609498210705,"results":"10","hashOfConfig":"7"},{"size":1128,"mtime":1609499833546,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1mrs138",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/html/bms/bms-frontend/src/index.js",[],["24","25"],"/var/www/html/bms/bms-frontend/src/App.js",[],"/var/www/html/bms/bms-frontend/src/reportWebVitals.js",[],"/var/www/html/bms/bms-frontend/src/Components/DataTables.js",["26","27","28","29","30","31","32","33","34"],"import React, { Component } from 'react';\nimport axios from 'axios'\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport 'font-awesome/css/font-awesome.min.css';\nimport AddModal from './AddModel';\nconst override = {\n\n\n}\nclass DataTable extends Component {\n\n    constructor(prop) {\n        super(prop);\n        this.state = {\n            employee: [],\n            from: '',\n            per_page: '',\n            last_page: '',\n            current_page: '',\n            next_page_url: '',\n            first_page_url: '',\n            last_page_url: '',\n            prev_page_url: '',\n            searchQuery: '',\n            test_type: '',\n            sortColumn: '',\n            sortOrder: '',\n            loading: true\n        };\n        this.pagination = this.pagination.bind(this);\n        this.keyPress = this.keyPress.bind(this);\n        this.sortTable = this.sortTable.bind(this);\n\n    }\n    componentWillReceiveProps(nextProps, nextState) {\n        console.log(nextProps, nextState);\n\n    }\n    componentWillMount() {\n    }\n    componentWillUnmount() {\n    }\n    componentDidMount() {\n        let url = 'http://127.0.0.1:8000/api/allemployee';\n        this.getCallApi(url);\n    }\n\n    getCallApi(url) {\n\n        axios.get(url)\n            .then(json => {\n\n                let response = json.data;\n                let data = response.data;\n\n                this.setState({\n                    employee: data,\n                    from: response.from,\n                    per_page: response.per_page,\n                    last_page: response.last_page,\n                    current_page: response.current_page,\n                    next_page_url: response.next_page_url,\n                    first_page_url: response.first_page_url,\n                    last_page_url: response.last_page_url,\n                    prev_page_url: response.prev_page_url,\n                    path: response.path,\n                    loading: false\n                });\n\n            });\n    }\n\n    pagination(target, e, i = null) {\n        e.preventDefault();\n        this.setState({\n            loading: true\n        });\n        let url;\n        switch (target) {\n            case 'pre':\n                if (this.state.prev_page_url != null) {\n                    this.getCallApi(this.state.prev_page_url);\n                }\n                break;\n            case 'next':\n                if (this.state.next_page_url != null) {\n                    this.getCallApi(this.state.next_page_url);\n                }\n                break;\n            case 'btn-click':\n                url = this.state.path + '?page=' + i;\n                this.getCallApi(url);\n                break;\n\n        }\n        this.setState({\n            loading: false\n        });\n    }\n\n    sortTable(key, e) {\n        e.preventDefault();\n        this.state.sortColumn = key;\n        this.state.sortOrder = this.state.sortOrder == '' || this.state.sortOrder == 'asc' ? 'desc' : 'asc';\n        let url = 'http://127.0.0.1:8000/api/allemployee?sortOrder=' + this.state.sortOrder;\n        this.getCallApi(url);\n    }\n\n    keyPress(e) {\n        \n            this.setState({\n                loading: true\n            });\n            this.setState({\n                searchQuery: e.target.value\n            });\n\n            let url = 'http://127.0.0.1:8000/api/allemployee?searchQuery=' + e.target.value;\n            this.getCallApi(url);\n\n            this.setState({\n                loading: false\n            });\n        \n    }\n\n    render() {\n        let table_row;\n\n        if (this.state.employee.length > 0) {\n            let tr;\n            table_row = this.state.employee.map((data, index) => {\n\n                return <tr key={index}>\n                    <td>{data.id}</td>\n                    <td>{data.emp_name}</td>\n                    <td>{data.team_lead}</td>\n                    <td>{data.last_login}</td>\n                    <td>{data.user_id}</td>\n                    <td>{data.status}</td>\n                    <td>{data.role}</td>\n                    <td><i className=\"fa fa-edit\"></i>&nbsp;&nbsp;<i className=\"fa fa-key\"></i>&nbsp;&nbsp;\n                    <i className=\"fa fa-ban\"></i></td>\n                </tr>;\n\n            });\n        } else {\n            table_row = null\n        }\n\n        let rows = [];\n        for (let i = 1; i <= this.state.last_page; i++) {\n            rows.push(<li className=\"page-item\" key={i}><a className=\"page-link\" href=\"#\" onClick={(e) => this.pagination('btn-click', e, i)}>{i}</a></li>);\n        }\n\n        return (\n\n            <div className=\"page-wrapper\">\n\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-12 col-md-12\">\n                            <div className=\"card card-default\">\n                                <div className=\"card-header\">\n                                    <div className=\"card-actions\">\n                                        <a className=\"\" data-action=\"collapse\"><i className=\"ti-minus\"></i></a>\n                                    </div>\n                                    <h4 className=\"card-title m-b-0\">Employees List</h4>\n                                </div>\n                                <div className=\"card-body collapse show\">\n                                    <div className=\"d-flex no-block\">\n                                    <AddModal />\n                                        <div className=\"ml-auto\" style={{ 'display': 'inherit' }}>\n                                            <input type=\"text\" name={\"search\"} placeholder='Search'\n                                            onKeyDown={(e) => { this.keyPress(e) }} className=\"form-control\" />\n                                        </div>\n                                    </div><br></br>\n\n                                    <div className=\"table-responsive\">\n\n                                        {!this.state.loading ?\n                                            <div>\n                                                <table className=\"table product-overview\">\n                                                    <thead>\n                                                        <tr>\n                                                            <th>Sr.</th>\n                                                            <th onClick={(e) => { this.sortTable('emp_name', e) }}>Employee Name</th>\n                                                            <th>Team Lead</th>\n                                                            <th>Last Login</th>\n                                                            <th onClick={(e) => { this.sortTable('user_id', e) }}>User id</th>\n                                                            <th>Status</th>\n                                                            <th>Role</th>\n                                                            <th>Action</th>\n                                                        </tr>\n                                                    </thead>\n\n                                                    <tbody>\n\n                                                        {table_row}\n\n                                                    </tbody>\n                                                </table>\n\n                                                <div className=\"dataTables_paginate paging_simple_numbers\" id=\"example23_paginate\">\n                                                    <ul className=\"pagination justify-content-end\">\n                                                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\" onClick={(e) => this.pagination('pre', e)}>Previous</a></li>\n                                                        {rows}\n                                                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\" onClick={(e) => this.pagination('next', e)}>Next</a></li>\n                                                    </ul>\n                                                </div>\n                                            </div>\n                                            :\n                                            <div className='sweet-loading' style={{ 'textAlign': 'center' }}>\n                                                <ClipLoader\n                                                    className={override}\n                                                    sizeUnit={\"px\"}\n                                                    size={50}\n                                                    color={'#123abc'}\n                                                    loading={this.state.loading}\n                                                />\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default DataTable;","/var/www/html/bms/bms-frontend/src/Components/AddModel.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":79,"column":9,"nodeType":"41","messageId":"42","endLine":95,"endColumn":10},{"ruleId":"43","severity":1,"message":"44","line":103,"column":9,"nodeType":"45","endLine":103,"endColumn":19},{"ruleId":"43","severity":1,"message":"44","line":104,"column":9,"nodeType":"45","endLine":104,"endColumn":19},{"ruleId":"46","severity":1,"message":"47","line":104,"column":53,"nodeType":"48","messageId":"49","endLine":104,"endColumn":55},{"ruleId":"46","severity":1,"message":"47","line":104,"column":83,"nodeType":"48","messageId":"49","endLine":104,"endColumn":85},{"ruleId":"50","severity":1,"message":"51","line":153,"column":57,"nodeType":"52","endLine":153,"endColumn":143},{"ruleId":"50","severity":1,"message":"53","line":166,"column":41,"nodeType":"52","endLine":166,"endColumn":80},{"ruleId":"50","severity":1,"message":"51","line":206,"column":83,"nodeType":"52","endLine":206,"endColumn":160},{"ruleId":"50","severity":1,"message":"51","line":208,"column":83,"nodeType":"52","endLine":208,"endColumn":161},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]